//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `researching_optional.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Demo;

public class MyException extends com.zeroc.Ice.UserException
{
    public MyException()
    {
    }

    public MyException(Throwable cause)
    {
        super(cause);
    }

    public MyException(int code)
    {
        setCode(code);
    }

    public MyException(int code, Throwable cause)
    {
        super(cause);
        setCode(code);
    }

    public String ice_id()
    {
        return "::Demo::MyException";
    }

    private int code;
    private boolean _code;

    public int getCode()
    {
        if(!_code)
        {
            throw new java.util.NoSuchElementException("code is not set");
        }
        return code;
    }

    public void setCode(int code)
    {
        _code = true;
        this.code = code;
    }

    public boolean hasCode()
    {
        return _code;
    }

    public void clearCode()
    {
        _code = false;
    }

    public void optionalCode(java.util.OptionalInt v)
    {
        if(v == null || !v.isPresent())
        {
            _code = false;
        }
        else
        {
            _code = true;
            code = v.getAsInt();
        }
    }

    public java.util.OptionalInt optionalCode()
    {
        if(_code)
        {
            return java.util.OptionalInt.of(code);
        }
        else
        {
            return java.util.OptionalInt.empty();
        }
    }

    /** @hidden */
    @Override
    protected void _writeImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice("::Demo::MyException", -1, true);
        if(_code)
        {
            ostr_.writeInt(1, code);
        }
        ostr_.endSlice();
    }

    /** @hidden */
    @Override
    protected void _readImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        if(_code = istr_.readOptional(1, com.zeroc.Ice.OptionalFormat.F4))
        {
            code = istr_.readInt();
        }
        istr_.endSlice();
    }

    /** @hidden */
    public static final long serialVersionUID = 568983073L;
}
