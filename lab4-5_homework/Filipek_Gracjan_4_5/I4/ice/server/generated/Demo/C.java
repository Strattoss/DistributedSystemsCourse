//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `researching_optional.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Demo;

public class C extends com.zeroc.Ice.Value
{
    public C()
    {
    }

    public C(int integer)
    {
        setInteger(integer);
    }

    private int integer;
    private boolean _integer;

    public int getInteger()
    {
        if(!_integer)
        {
            throw new java.util.NoSuchElementException("integer is not set");
        }
        return integer;
    }

    public void setInteger(int integer)
    {
        _integer = true;
        this.integer = integer;
    }

    public boolean hasInteger()
    {
        return _integer;
    }

    public void clearInteger()
    {
        _integer = false;
    }

    public void optionalInteger(java.util.OptionalInt v)
    {
        if(v == null || !v.isPresent())
        {
            _integer = false;
        }
        else
        {
            _integer = true;
            integer = v.getAsInt();
        }
    }

    public java.util.OptionalInt optionalInteger()
    {
        if(_integer)
        {
            return java.util.OptionalInt.of(integer);
        }
        else
        {
            return java.util.OptionalInt.empty();
        }
    }

    public C clone()
    {
        return (C)super.clone();
    }

    public static String ice_staticId()
    {
        return "::Demo::C";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    /** @hidden */
    public static final long serialVersionUID = -1592068528L;

    /** @hidden */
    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, true);
        if(_integer)
        {
            ostr_.writeInt(1, integer);
        }
        ostr_.endSlice();
    }

    /** @hidden */
    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        if(_integer = istr_.readOptional(1, com.zeroc.Ice.OptionalFormat.F4))
        {
            integer = istr_.readInt();
        }
        istr_.endSlice();
    }
}
